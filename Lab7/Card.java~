import java.awt.*;
import objectdraw.*;

/**
 * The Card class defines an individual card. Your program will construct many cards. 
 * A Card consists of a rectangle and a symbol. 
 * 
 * @author Ioanna Deni
 * @version 4/25/2017
 */
public class Card
{
    //This variables hold the sized of the card 
    private static final int CARD_HEIGHT = 500/6;
    private static final int CARD_WIDTH = CARD_HEIGHT / 2;

    //This variables hold the actual card and symbol and pattern of the card so they can be used in another methods
    private FilledRect card;
    private Text text;

    //This variables will hold the position of the text shown or hidden 
    double textLeft;
    double textTop;

    // Colors for the card
    private static final Color CARD_COLOR = Color.GRAY;
    private static final Color DARK_CARD = CARD_COLOR.darker();

    /**
     * Constructor for Card that creates a rectangle 
     * at the left and top coordinates of the card, 
     * with the symbol to display on the card, on  the canvas. 
     * 
     * @param double for left and top coordinates 
     * @param str symbol to be displayed on the card
     * @param a canvas
     */
    public Card(double left, double top, int height, int width, char symbol, DrawingCanvas canvas) 
    {
        //This objectDraw constractoe will make a card like rectangle
        card = new FilledRect (left, top, height, width, canvas);
        card.setColor(DARK_CARD);

        text = new Text (symbol, left, top, canvas);
        Font font = new Font("Jokerman", Font.PLAIN, 40);
        text.setFont(font);

        textLeft = left+width/2 - text.getWidth()/2 ;
        textTop = top+height/2  - text.getHeight()/2;

        text.moveTo (textLeft, textTop);

        text.hide();
    }

    /**
     * This method should display the symbol, making it appear that the card is faceup. 
     */
    public void showSymbol () {
        //This line makes the card a lighter color so it looks better aesthetically 
        card.setColor(CARD_COLOR);

        //This line shows the hidden text.
        text.show();
    }

    /**
     * This method determines if the user clicked on a card when it's called on the controller
     */
    public boolean contains (Location point) {
        if (card.contains (point)) {
            return true;
        }

        return false;
    }

    /**
     * This method should return the symbol displayed on the card 
     */
    public char getSymbol () {
         return card.getText();
    }

    /**
     * This method should display the symbol, making it appear that the card is faceup. 
     */
    public void hideSymbol () {
        //This line makes the card a dark color so it looks like it turned 
        card.setColor(DARK_CARD);

        //This line hides the text.
        text.hide();
    }

    /**
     * This method should remove the card and its symbol from the canvas. 
     */
    public void removeFromCanvas () {
        card.removeFromCanvas();
        text.removeFromCanvas();
    }
}
